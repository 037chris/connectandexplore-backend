{"file":"C:\\Users\\naceu\\OneDrive\\Desktop\\Studium\\5 Semester\\Projekt\\connectandexplore\\Backend\\src\\utils\\swagger.ts","mappings":"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","names":[],"sources":["C:\\Users\\naceu\\OneDrive\\Desktop\\Studium\\5 Semester\\Projekt\\connectandexplore\\Backend\\src\\utils\\swagger.ts"],"sourcesContent":["// Copyrights Code: https://github.com/TomDoesTech/REST-API-Tutorial-Updated/blob/main/src/utils/swagger.ts\r\n\r\nimport { Express, Request, Response } from \"express\";\r\nimport swaggerJsdoc from \"swagger-jsdoc\";\r\nimport swaggerUi from \"swagger-ui-express\";\r\nimport { version } from \"../../package.json\";\r\n\r\nconst options: swaggerJsdoc.Options = {\r\n  definition: {\r\n    openapi: \"3.1.0\",\r\n    info: {\r\n      title: \"Explore and Connect REST API Docs\",\r\n      version,\r\n    },\r\n    components: {\r\n      securitySchemes: {\r\n        bearerAuth: {\r\n          type: \"http\",\r\n          scheme: \"bearer\",\r\n          bearerFormat: \"JWT\",\r\n        },\r\n      },\r\n      schemas: {\r\n        IAddress: {\r\n          type: \"object\",\r\n          properties: {\r\n            street: {\r\n              type: \"string\",\r\n            },\r\n            houseNumber: {\r\n              type: \"string\",\r\n            },\r\n            apartmentNumber: {\r\n              type: \"string\",\r\n            },\r\n            postalCode: {\r\n              type: \"string\",\r\n            },\r\n            city: {\r\n              type: \"string\",\r\n            },\r\n            stateOrRegion: {\r\n              type: \"string\",\r\n            },\r\n            country: {\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        ICategory: {\r\n          type: \"object\",\r\n          properties: {\r\n            name: {\r\n              type: \"string\",\r\n            },\r\n            description: {\r\n              type: \"string\",\r\n            },\r\n          },\r\n        },\r\n        IChat: {\r\n          type: \"object\",\r\n          properties: {\r\n            // Define IChat properties\r\n          },\r\n        },\r\n        IUser: {\r\n          type: \"object\",\r\n          properties: {\r\n            email: {\r\n              type: \"string\",\r\n            },\r\n            name: {\r\n              type: \"object\",\r\n              properties: {\r\n                first: {\r\n                  type: \"string\",\r\n                },\r\n                last: {\r\n                  type: \"string\",\r\n                },\r\n              },\r\n            },\r\n            password: {\r\n              type: \"string\",\r\n            },\r\n            isAdministrator: {\r\n              type: \"boolean\",\r\n            },\r\n            address: {\r\n              $ref: \"#/components/schemas/IAddress\",\r\n            },\r\n            profilePicture: {\r\n              type: \"string\",\r\n            },\r\n            birthDate: {\r\n              type: \"date\",\r\n              format: \"date\",\r\n            },\r\n            gender: {\r\n              type: \"string\",\r\n            },\r\n            socialMediaUrls: {\r\n              type: \"object\",\r\n              properties: {\r\n                facebook: {\r\n                  type: \"string\",\r\n                },\r\n                instagram: {\r\n                  type: \"string\",\r\n                },\r\n              },\r\n            },\r\n            isActive: {\r\n              type: \"boolean\",\r\n            },\r\n          },\r\n        },\r\n        IEvent: {\r\n          type: \"object\",\r\n          properties: {\r\n            name: {\r\n              type: \"string\",\r\n            },\r\n            creator: {\r\n              $ref: \"#/components/schemas/IUser\", // Reference to IUser schema\r\n            },\r\n            description: {\r\n              type: \"string\",\r\n            },\r\n            price: {\r\n              type: \"number\",\r\n              minimum: 0,\r\n            },\r\n            date: {\r\n              type: \"string\", // Date represented as string in ISO 8601 format\r\n              format: \"date-time\",\r\n            },\r\n            address: {\r\n              $ref: \"#/components/schemas/IAddress\",\r\n            },\r\n            thumbnail: {\r\n              type: \"string\",\r\n            },\r\n            hashtags: {\r\n              type: \"array\",\r\n              items: {\r\n                type: \"string\",\r\n              },\r\n            },\r\n            category: {\r\n              type: \"array\",\r\n              items: {\r\n                $ref: \"#/components/schemas/ICategory\",\r\n              },\r\n            },\r\n            chat: {\r\n              $ref: \"#/components/schemas/IChat\", // Reference to IChat schema\r\n            },\r\n            participants: {\r\n              type: \"array\",\r\n              items: {\r\n                type: \"string\", // Assuming participants are represented by strings (e.g., ObjectId as strings)\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    security: [\r\n      {\r\n        bearerAuth: [],\r\n      },\r\n    ],\r\n  },\r\n  apis: [\"./src/routes/*.ts\", \"./src/model/*.ts\"],\r\n};\r\n\r\nconst swaggerSpec = swaggerJsdoc(options);\r\n\r\nfunction swaggerDocs(app: Express, port: number) {\r\n  // Swagger page\r\n  app.use(\"/swagger/docs\", swaggerUi.serve, swaggerUi.setup(swaggerSpec));\r\n\r\n  // Docs in JSON format\r\n  app.get(\"/docs.json\", (req: Request, res: Response) => {\r\n    res.setHeader(\"Content-Type\", \"application/json\");\r\n    res.send(swaggerSpec);\r\n  });\r\n\r\n  console.log(`Docs available at https://localhost:${port}/swagger/docs`);\r\n}\r\n\r\nexport default swaggerDocs;\r\n"],"version":3}