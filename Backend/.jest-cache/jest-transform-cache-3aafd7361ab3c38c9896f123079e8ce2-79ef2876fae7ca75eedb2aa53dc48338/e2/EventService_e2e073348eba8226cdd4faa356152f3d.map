{"file":"C:\\Users\\naceu\\OneDrive\\Desktop\\Studium\\5 Semester\\Projekt\\connectandexplore\\Backend\\src\\services\\EventService.ts","mappings":"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","names":[],"sources":["C:\\Users\\naceu\\OneDrive\\Desktop\\Studium\\5 Semester\\Projekt\\connectandexplore\\Backend\\src\\services\\EventService.ts"],"sourcesContent":["import { Types } from \"mongoose\";\r\nimport { eventResource, eventsResource, usersResource } from \"../Resources\";\r\nimport { Event } from \"../model/EventModel\";\r\nimport { User } from \"../model/UserModel\";\r\n\r\nexport class EventService {\r\n  /**\r\n   * Event erstellen\r\n   */\r\n  async createEvent(\r\n    eventResource: eventResource,\r\n    creatorID: string\r\n  ): Promise<eventResource> {\r\n    try {\r\n      const creator = await User.findById(creatorID);\r\n      const event = await Event.create({\r\n        name: eventResource.name,\r\n        creator: creator.id,\r\n        description: eventResource.description,\r\n        price: eventResource.price,\r\n        date: eventResource.date,\r\n        address: eventResource.address,\r\n        thumbnail: eventResource.thumbnail,\r\n        hashtags: eventResource.hashtags,\r\n        category: eventResource.category,\r\n        chat: new Types.ObjectId(),\r\n        participants: [creatorID],\r\n      });\r\n      return {\r\n        id: event.id,\r\n        name: event.name,\r\n        creator: event.creator.toString(),\r\n        description: event.description,\r\n        price: event.price,\r\n        date: event.date,\r\n        address: event.address,\r\n        thumbnail: event.thumbnail,\r\n        hashtags: event.hashtags,\r\n        category: event.category,\r\n        chat: event.chat.toString(),\r\n        participants: event.participants.map((participantId) =>\r\n          participantId.toString()\r\n        ),\r\n      };\r\n    } catch (err) {\r\n      throw new Error(\"Event creation failed\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ein bestimmtes Event abrufen\r\n   */\r\n  async getEvent(eventID: string): Promise<eventResource> {\r\n    try {\r\n      const event = await Event.findById(eventID).exec();\r\n      if (!event) {\r\n        throw new Error(\"Event not found\");\r\n      }\r\n      return {\r\n        id: event.id,\r\n        name: event.name,\r\n        creator: event.creator.toString(),\r\n        description: event.description,\r\n        price: event.price,\r\n        date: event.date,\r\n        address: event.address,\r\n        thumbnail: event.thumbnail,\r\n        hashtags: event.hashtags,\r\n        category: event.category,\r\n        chat: event.chat.toString(),\r\n        participants: event.participants.map((participantId) =>\r\n          participantId.toString()\r\n        ),\r\n      };\r\n    } catch (error) {\r\n      throw new Error(\"Error getting event\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Alle erstellten Events abrufen ( Event Manager / Admin )\r\n   */\r\n  async getEvents(userID: string): Promise<eventsResource> {\r\n    if (!userID) {\r\n      throw new Error(\"Can not get creator, userID is invalid\");\r\n    }\r\n    try {\r\n      const events = await Event.find({ creator: userID }).exec();\r\n      const eventsResult: eventsResource = {\r\n        events: events.map((event) => ({\r\n          id: event.id,\r\n          name: event.name,\r\n          creator: event.creator.toString(),\r\n          description: event.description,\r\n          price: event.price,\r\n          date: event.date,\r\n          address: event.address,\r\n          thumbnail: event.thumbnail,\r\n          hashtags: event.hashtags,\r\n          category: event.category,\r\n          chat: event.chat.toString(),\r\n          participants: event.participants.map((participantId) =>\r\n            participantId.toString(),\r\n          ),\r\n        })),\r\n      };\r\n      return eventsResult;\r\n    } catch (error) {\r\n      throw new Error(\"Error getting events\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Alle Events abrufen\r\n   */\r\n  async getAllEvents(): Promise<eventsResource> {\r\n    try {\r\n      const events = await Event.find({}).exec();\r\n      const eventsResult: eventsResource = {\r\n        events: events.map((event) => ({\r\n          id: event.id,\r\n          name: event.name,\r\n          creator: event.creator.toString(),\r\n          description: event.description,\r\n          price: event.price,\r\n          date: event.date,\r\n          address: event.address,\r\n          thumbnail: event.thumbnail,\r\n          hashtags: event.hashtags,\r\n          category: event.category,\r\n          chat: event.chat.toString(),\r\n          participants: event.participants.map((participantId) =>\r\n            participantId.toString(),\r\n          ),\r\n        })),\r\n      };\r\n      return eventsResult;\r\n    } catch (error) {\r\n      throw new Error(\"Error getting events\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Events filtern / Event suchen\r\n   */\r\n  async searchEvents(query: string): Promise<eventsResource> {\r\n    if (!query || query.trim().length === 0) return this.getAllEvents();\r\n    try {\r\n      const events = await Event.find({\r\n        $or: [\r\n          { name: { $regex: new RegExp(query, \"i\") } },\r\n          { description: { $regex: new RegExp(query, \"i\") } },\r\n          { hashtags: { $in: [new RegExp(query, \"i\")] } },\r\n        ],\r\n      }).exec();\r\n      const eventsResult: eventsResource = {\r\n        events: events.map((event) => ({\r\n          id: event.id,\r\n          name: event.name,\r\n          creator: event.creator.toString(),\r\n          description: event.description,\r\n          price: event.price,\r\n          date: event.date,\r\n          address: event.address,\r\n          thumbnail: event.thumbnail,\r\n          hashtags: event.hashtags,\r\n          category: event.category,\r\n          chat: event.chat.toString(),\r\n          participants: event.participants.map((participantId) =>\r\n            participantId.toString(),\r\n          ),\r\n        })),\r\n      };\r\n      return eventsResult;\r\n    } catch (error) {\r\n      throw new Error(\"Error searching events\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Am Event teilnehmen ( Event Teilnehmer )\r\n   */\r\n  async joinEvent(userID: string, eventID: string): Promise<boolean> {\r\n    if (!userID) throw new Error(`User ID: ${userID} is invalid.`);\r\n    if (!eventID) throw new Error(`Event ID: ${eventID} is invalid.`);\r\n    const user = await User.findById(userID).exec();\r\n    const event = await Event.findById(eventID).exec();\r\n    if (!user) throw new Error(\"User not found\");\r\n    if (!event) throw new Error(\"Event not found\");\r\n    if (event.participants.includes(user._id)) {\r\n      throw new Error(\"User is already participating in the event\");\r\n    }\r\n    try {\r\n      event.participants.push(user._id);\r\n      await event.save();\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Alle teilgenommenen Events abrufen ( Event Teilnehmer )\r\n   */\r\n  async getJoinedEvents(userID: string): Promise<eventsResource> {\r\n    try {\r\n      const events = await Event.find({ participants: userID }).exec();\r\n      const eventsResult: eventsResource = {\r\n        events: events.map((event) => ({\r\n          id: event.id,\r\n          name: event.name,\r\n          creator: event.creator.toString(),\r\n          description: event.description,\r\n          price: event.price,\r\n          date: event.date,\r\n          address: event.address,\r\n          thumbnail: event.thumbnail,\r\n          hashtags: event.hashtags,\r\n          category: event.category,\r\n          chat: event.chat.toString(),\r\n          participants: event.participants.map((participantId) =>\r\n            participantId.toString(),\r\n          ),\r\n        })),\r\n      };\r\n      return eventsResult;\r\n    } catch (error) {\r\n      throw new Error(\"Error getting events\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Teilnahme am Event absagen ( Event Teilnehmer )\r\n   */\r\n  async cancelEvent(userID: string, eventID: string): Promise<boolean> {\r\n    if (!userID) throw new Error(`User ID: ${userID} is invalid.`);\r\n    if (!eventID) throw new Error(`Event ID: ${eventID} is invalid.`);\r\n    const event = await Event.findById(eventID).exec();\r\n    if (!event) throw new Error(\"Event not found\");\r\n    if (event.creator && event.creator.toString() === userID)\r\n      throw new Error(\"Can not cancel participation as event manager\");\r\n    const index = event.participants.findIndex((participant) => {\r\n      return participant.equals(new Types.ObjectId(userID));\r\n    });\r\n    if (index === -1) {\r\n      throw new Error(\"User is not participating in the event\");\r\n    }\r\n    try {\r\n      event.participants.splice(index, 1);\r\n      await event.save();\r\n      return true;\r\n    } catch (error) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Alle Teilnehmer vom Event abrufen ( Event Manager / Admin )\r\n   */\r\n  async getParticipants(\r\n    eventID: string,\r\n    creatorID: string,\r\n  ): Promise<usersResource> {\r\n    try {\r\n      const event = await Event.findById(eventID).exec();\r\n      if (!event) throw new Error(\"Event not found\");\r\n      const creator = await User.findById(event.creator).exec();\r\n      const user = await User.findById(creatorID);\r\n      if (\r\n        !creator ||\r\n        !user ||\r\n        (creator.id !== creatorID && !user.isAdministrator)\r\n      ) {\r\n        throw new Error(\"Invalid authorization\");\r\n      }\r\n      const participantIDs = event.participants;\r\n      const participants = await User.find({\r\n        _id: { $in: participantIDs },\r\n      }).exec();\r\n      const result: usersResource = {\r\n        users: participants.map((user) => ({\r\n          id: user.id,\r\n          name: user.name,\r\n          email: user.email,\r\n          isAdministrator: user.isAdministrator,\r\n          address: user.address,\r\n          profilePicture: user.profilePicture,\r\n          birthDate: user.birthDate,\r\n          gender: user.gender,\r\n          socialMediaUrls: user.socialMediaUrls,\r\n          isActive: user.isActive,\r\n        })),\r\n      };\r\n      return result;\r\n    } catch (error) {\r\n      throw new Error(\"Error getting participants\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Event bearbeiten ( Event Manager / Admin )\r\n   */\r\n  async updateEvent(\r\n    eventID: string,\r\n    eventResource: eventResource,\r\n    userID: string\r\n  ): Promise<eventResource> {\r\n    const event = await Event.findById(eventID).exec();\r\n    if (!event) throw new Error(\"Event not found\");\r\n    const creator = await User.findById(event.creator).exec();\r\n    const user = await User.findById(userID).exec();\r\n    if (\r\n      !creator ||\r\n      !user ||\r\n      (creator._id.toString() !== userID && !user.isAdministrator)\r\n    ) {\r\n      throw new Error(\"Invalid authorization\");\r\n    }\r\n    if (eventResource.name) event.name = eventResource.name;\r\n    if (eventResource.description)\r\n      event.description = eventResource.description;\r\n    if (eventResource.price !== undefined) {\r\n      if (eventResource.price < 0) {\r\n        throw new Error(\"Event price cannot be less than 0\");\r\n      } else if (eventResource.price === 0) {\r\n        event.price = 0;\r\n      } else {\r\n        event.price = eventResource.price;\r\n      }\r\n    }\r\n    if (eventResource.date) event.date = eventResource.date;\r\n    if (eventResource.address) event.address = eventResource.address;\r\n    if (eventResource.thumbnail) event.thumbnail = eventResource.thumbnail;\r\n    if (eventResource.hashtags) event.hashtags = eventResource.hashtags;\r\n    if (eventResource.category) event.category = eventResource.category;\r\n    const savedEvent = await event.save();\r\n    return {\r\n      id: savedEvent.id,\r\n      name: savedEvent.name,\r\n      creator: savedEvent.creator.toString(),\r\n      description: savedEvent.description,\r\n      price: savedEvent.price,\r\n      date: savedEvent.date,\r\n      address: savedEvent.address,\r\n      thumbnail: savedEvent.thumbnail,\r\n      hashtags: savedEvent.hashtags,\r\n      category: savedEvent.category,\r\n      chat: savedEvent.chat.toString(),\r\n      participants: savedEvent.participants.map((participantId) =>\r\n        participantId.toString()\r\n      ),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Event löschen ( Event Manager / Admin )\r\n   */\r\n  async deleteEvent(eventID: string, userID: string): Promise<boolean> {\r\n    try {\r\n      const event = await Event.findById(eventID).exec();\r\n      if (!event) throw new Error(\"Event not found\");\r\n      const creator = await User.findById(event.creator).exec();\r\n      const user = await User.findById(userID).exec();\r\n      if (\r\n        !creator ||\r\n        !user ||\r\n        (creator._id.toString() !== userID && !user.isAdministrator)\r\n      ) {\r\n        throw new Error(\"Invalid authorization\");\r\n      }\r\n      const result = await Event.deleteOne({ _id: eventID }).exec();\r\n      return result.deletedCount == 1;\r\n    } catch (error) {\r\n      throw new Error(\"Error deleting event\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default new EventService();\r\n"],"version":3}